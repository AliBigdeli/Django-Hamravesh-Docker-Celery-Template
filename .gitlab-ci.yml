# defining all stages
stages: 
  - test
  - build
  - deploy-backend 
  - deploy-worker 
  - deploy-beater


# testing stage
Test:
  # defining the stage name
  stage: test

  # only on prod mode
  only:
    refs:
    - prod

  # defining specific runners
  # tags:
  #   - my-runner

  # defining the base image 
  image: hub.hamdocker.ir/library/python:3.9-slim-buster

  # defining the services which it depends on
  services:
    - name: hub.hamdocker.ir/library/postgres:alpine
      alias: db

  # scripts which needs to be run before main script
  before_script:
    - pip3 install -r requirements.txt
    - cd ./core
    - python manage.py migrate
    - python manage.py check

  # main script for testing django app
  script:
    - export DJANGO_SETTINGS_MODULE=core.settings
    - pytest .

  # variables for service and main image
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres

# building stage
build:
  
  # name of the stage 
  stage: build
  
  # using darkube image cli
  image: hamravesh.hamdocker.ir/public/darkube-cli:v1.1

  # only doing the job in prod mode
  only:
    refs:
    - prod

  # defining specific runners
  # tags:
  #   - my-runner

  # running build script for the project
  # name of the predefined env variables: https://github.com/gitlabhq/gitlabhq/blob/master/doc/ci/variables/predefined_variables.md
  script:
  - 'darkube build --push -t $IMAGE:$CI_COMMIT_SHORT_SHA -t $IMAGE:$CI_COMMIT_REF_SLUG  --workdir
    . --file ./dockerfiles/prod/django/Dockerfile --build-context . '

  
  
# backend deployment stage 
darkube_deploy_backend:
  # name of the stage 
  stage: deploy-backend 

  # using darkube image cli
  image: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  
  # only doing the job in prod mode
  only:
    refs:
    - prod
  
  # defining specific runners
  # tags:
  #   - my-runner


  # deploy token variable: DARKUBE_DEPLOY_TOKEN_BACKEND
  # app id variable: DARKUBE_APP_ID_BACKEND
  script:
  - darkube deploy --ref stage --token ${DARKUBE_DEPLOY_TOKEN_BACKEND} --app-id
    ${DARKUBE_APP_ID_BACKEND}  --image-tag "${CI_COMMIT_SHORT_SHA}" --job-id
    "${CI_JOB_ID}" --stateless-app true



darkube_deploy_worker:
  # name of the stage 
  stage: deploy-worker

  # using darkube image cli
  image: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  
  # only doing the job in prod mode
  only:
    refs:
    - prod
  
  # defining specific runners
  # tags:
  #   - my-runner

  # deploy token variable: DARKUBE_DEPLOY_TOKEN_WORKER
  # app id variable: DARKUBE_APP_ID_WORKER
  script:
  - export IMAGE="registry.hamdocker.ir/sama/weather"
  - darkube deploy --ref stage --token ${DARKUBE_DEPLOY_TOKEN_WORKER} --app-id
    ${DARKUBE_APP_ID_WORKER}  --image-tag "${CI_COMMIT_SHORT_SHA}" --job-id
    "${CI_JOB_ID}" --stateless-app true
  


darkube_deploy_beater:
  # name of the stage 
  stage: deploy-beater

  # using darkube image cli
  image: hamravesh.hamdocker.ir/public/darkube-cli:v1.1
  
  # only doing the job in prod mode
  only:
    refs:
    - prod
  
  # defining specific runners
  # tags:
  #   - my-runner

  # deploy token variable: DARKUBE_DEPLOY_TOKEN_BEATER
  # app id variable: DARKUBE_APP_ID_BEATER
  script:
  - export IMAGE="registry.hamdocker.ir/sama/weather"
  - darkube deploy --ref stage --token ${DARKUBE_DEPLOY_TOKEN_BEATER} --app-id
    ${DARKUBE_APP_ID_BEATER}  --image-tag "${CI_COMMIT_SHORT_SHA}" --job-id
    "${CI_JOB_ID}" --stateless-app true
  
